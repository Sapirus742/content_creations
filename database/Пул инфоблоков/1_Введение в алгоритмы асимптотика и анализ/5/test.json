{
  "time":600,
  "count":3,
  "0": {
    "mark":2,
    "name": "ОПРЕДЕЛИТЕ АСИМПТОТИКУ АЛГОРИТМА.\nПроцедура Sentinel_Linear_Search (A, n, x):\n1. Ввести n.\n2. Ввести массив A.\n3. Ввести x.\n4. Сохранить A[n] в переменной last и поместить x в A[n].\n5. Установить i равным 1.\n6. Пока A[i] ≠ x выполнять следующие действия:\n   A. Увеличить i на 1.\n7. Восстановить A[n] из переменной last.\n8. Если i < n или A[n] = x, вернуть значение i в качестве выхода процедуры.\n9. Иначе вернуть в качестве возвращаемого значения not_found.",
    "type": 0,
    "answer": "1",
    "chooses": {
      "0": "O(n^2)",
      "1": "O(n)",
      "2": "O(1)",
      "3": "O(log n)"
    }
  },
  "1": {
    "name": "ОПРЕДЕЛИТЕ АСИМПТОТИКУ АЛГОРИТМА.\n\nnumbers = [ ... ] // массив длины n\nkey = 15\nflag = ЛОЖЬ\n\nДля i = 1 до n:\n{\n   Если numbers[i] == key:\n      flag = ИСТИНА\n}\n\nЕсли flag == ИСТИНА:\n   вывести 'нашел'\nИначе:\n   вывести 'не нашел'",
    "type": 0,
    "mark":2,
    "answer": "2",
    "chooses": {
      "0": "O(log n)",
      "1": "O(n^2)",
      "2": "O(n)",
      "3": "O(1)"
    }
  },
  "2": {
    "name": "ОПРЕДЕЛИТЕ АСИМПТОТИКУ АЛГОРИТМА.\nПроцедура Insert_Sort (A, n):\n1. Для i = 2 до n:\n   A. Установить переменную key равной A[i], а переменной j присвоить значение i - 1\n   B. Пока j > 0 и A[j] > key, выполнить следующее:\n      i. Присвоить A[j + 1] значение A[j]\n      ii. Уменьшить j на единицу\n   C. Присвоить A[j + 1] значение key",
    "type": 0,
    "mark":2,
    "answer": "1",
    "chooses": {
      "0": "O(1)",
      "1": "O(n^2)",
      "2": "O(n)",
      "3": "O(log n)"
    }
  }
}