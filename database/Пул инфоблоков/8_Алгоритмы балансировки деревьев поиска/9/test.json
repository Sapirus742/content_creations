{
  "count": 15,
  "time":1200,
  "0": {
    "name": "Какое из перечисленных полей отсутствует в структуре узла AVL дерева?",
    "type": 0,
    "mark":1,
    "answer": "3",
    "chooses": {
      "0": "Значение узла",
      "1": "Указатель на родительский узел",
      "2": "Высота узла",
      "3": "Цвет узла"
    }
  },
  "1": {
    "name": "Как вычисляется высота узла в AVL дереве?",
    "type": 0,
    "mark":1,
    "answer": "1",
    "chooses": {
      "0": "Количество потомков узла",
      "1": "Максимальная высота поддеревьев плюс один",
      "2": "Разница высот левого и правого поддеревьев",
      "3": "Сумма высот левого и правого поддеревьев"
    }
  },
  "2": {
    "name": "Какое условие балансировки должно выполняться для каждого узла AVL дерева?",
    "type": 0,
    "mark":1,
    "answer": "0",
    "chooses": {
      "0": "Разница высот поддеревьев не более 1",
      "1": "Разница высот поддеревьев не более 2",
      "2": "Высоты поддеревьев должны быть равны",
      "3": "Высота левого поддерева должна быть больше правого"
    }
  },
  "3": {
    "name": "Какие операции могут нарушить баланс AVL дерева?",
    "type": 1,
    "mark":1,
    "answer": ["0", "1"],
    "chooses": {
      "0": "Добавление элемента",
      "1": "Удаление элемента",
      "2": "Поиск элемента",
      "3": "Обход дерева"
    }
  },
  "4": {
    "name": "Какой тип поворота применяется, если высота правого поддерева больше левого на 2, а высота правого поддерева правого потомка больше или равна высоте левого поддерева правого потомка?",
    "type": 0,
    "mark":1,
    "answer": "0",
    "chooses": {
      "0": "Малый левый поворот",
      "1": "Большой левый поворот",
      "2": "Малый правый поворот",
      "3": "Большой правый поворот"
    }
  },
  "5": {
    "name": "Какой тип поворота применяется, если высота левого поддерева больше правого на 2, а высота правого поддерева левого потомка больше высоты левого поддерева левого потомка?",
    "type": 0,
    "mark":1,
    "answer": "3",
    "chooses": {
      "0": "Малый левый поворот",
      "1": "Большой левый поворот",
      "2": "Малый правый поворот",
      "3": "Большой правый поворот"
    }
  },
  "6": {
    "name": "Что произойдет, если после удаления элемента разница высот поддеревьев узла превысит 1?",
    "type": 0,
    "mark":1,
    "answer": "1",
    "chooses": {
      "0": "Дерево автоматически удалит узел",
      "1": "Будет выполнена балансировка дерева",
      "2": "Дерево продолжит работать без изменений",
      "3": "Дерево перестроится заново"
    }
  },
  "7": {
    "name": "Какие из перечисленных утверждений верны для AVL деревьев?",
    "type": 1,
    "mark":1,
    "answer": ["0", "2"],
    "chooses": {
      "0": "Гарантируют высоту порядка O(log N)",
      "1": "Могут иметь высоту O(N) в худшем случае",
      "2": "Разница высот поддеревьев любого узла не превышает 1",
      "3": "Требуют меньше операций балансировки, чем красно-черные деревья"
    }
  },
  "8": {
    "name": "Какой алгоритм используется для добавления элемента в AVL дерево?",
    "type": 0,
    "mark":1,
    "answer": "0",
    "chooses": {
      "0": "Рекурсивный спуск с последующей балансировкой",
      "1": "Итеративный обход с балансировкой на каждом шаге",
      "2": "Добавление элемента в корень дерева",
      "3": "Добавление элемента в случайное место"
    }
  },
  "9": {
    "name": "Какой алгоритм используется для удаления элемента из AVL дерева?",
    "type": 0,
    "mark":1,
    "answer": "1",
    "chooses": {
      "0": "Простое удаление узла без балансировки",
      "1": "Рекурсивный поиск с последующей балансировкой",
      "2": "Удаление всего поддерева",
      "3": "Замена удаляемого узла на корень дерева"
    }
  },
  "10": {
    "name": "Какой элемент выбирается для замещения удаляемого узла, если у него есть оба потомка?",
    "type": 1,
    "mark":1,
    "answer": ["0", "1"],
    "chooses": {
      "0": "Максимальный элемент из левого поддерева",
      "1": "Минимальный элемент из правого поддерева",
      "2": "Любой лист дерева",
      "3": "Корень дерева"
    }
  },
  "11": {
    "name": "Какие поддеревья участвуют в большом левом повороте?",
    "type": 1,
    "mark":1,
    "answer": ["1", "3", "4"],
    "chooses": {
      "0": "L и R",
      "1": "B и C",
      "2": "A и M",
      "3": "A и C",
      "4": "B и N"
    }
  },
  "12": {
    "name": "Как реализуются правые повороты по сравнению с левыми?",
    "type": 0,
    "mark":1,
    "answer": "2",
    "chooses": {
      "0": "Требуют других условий для выполнения",
      "1": "Используют другую формулу для пересчета высот",
      "2": "Реализуются зеркально аналогичным образом",
      "3": "Не требуют переназначения родителей"
    }
  },
  "13": {
    "name": "Какое из утверждений верно для метода push в AVL дереве?",
    "type": 0,
    "mark":1,
    "answer": "0",
    "chooses": {
      "0": "Элемент всегда добавляется в лист дерева",
      "1": "Элемент добавляется в корень дерева",
      "2": "Допускаются дублирующиеся элементы",
      "3": "Балансировка выполняется только для корня"
    }
  },
  "14": {
    "name": "Какое из утверждений верно для метода pop в AVL дереве?",
    "type": 0,
    "mark":1,
    "answer": "1",
    "chooses": {
      "0": "Удаление узла без потомков не требует балансировки",
      "1": "После удаления обновляются высоты и выполняется балансировка",
      "2": "Удаление возможно только для листьев",
      "3": "Дерево перестраивается заново после каждого удаления"
    }
  },
  "15": {
    "name": "Какой тип поворота применяется, если высота левого поддерева больше правого на 2, а высота левого поддерева левого потомка больше или равна высоте правого поддерева левого потомка?",
    "type": 0,
    "mark":1,
    "answer": "2",
    "chooses": {
      "0": "Малый левый поворот",
      "1": "Большой левый поворот",
      "2": "Малый правый поворот",
      "3": "Большой правый поворот"
    }
  },
  "16": {
    "name": "Какое условие необходимо для выполнения малого правого поворота?",
    "type": 1,
    "mark":1,
    "answer": ["0", "2"],
    "chooses": {
      "0": "Разница высот левого и правого поддеревьев вершины A равна 2",
      "1": "Разница высот левого и правого поддеревьев вершины A равна 1",
      "2": "Высота левого поддерева B больше или равна высоте его правого поддерева",
      "3": "Высота правого поддерева B больше высоты его левого поддерева"
    }
  },
  "17": {
    "name": "Как пересчитывается высота вершины после малого правого поворота?",
    "type": 0,
    "mark":1,
    "answer": "1",
    "chooses": {
      "0": "Высота не изменяется",
      "1": "max(height(L), height(C)) + 1",
      "2": "max(height(A), height(R)) + 1",
      "3": "height(A) + height(B) + 1"
    }
  },
  "18": {
    "name": "Какое из утверждений верно для AVL деревьев?",
    "type": 0,
    "mark":1,
    "answer": "2",
    "chooses": {
      "0": "Они проще в реализации, чем красно-черные деревья",
      "1": "Они требуют меньше операций балансировки, чем красно-черные деревья",
      "2": "Они обеспечивают более строгий баланс, чем красно-черные деревья",
      "3": "Они всегда менее эффективны, чем сплей-деревья"
    }
  },
  "19": {
    "name": "Какой элемент является замещающим при удалении узла с двумя потомками, если высота левого поддерева больше правого?",
    "type": 0,
    "mark":1,
    "answer": "0",
    "chooses": {
      "0": "Максимальный элемент из левого поддерева",
      "1": "Минимальный элемент из правого поддерева",
      "2": "Любой лист дерева",
      "3": "Корень дерева"
    }
  }
}